{"version":3,"sources":["BooksAPI.js","components/Book.js","components/SearchPage.js","components/Bookshelves/Bookshelf/Bookshelf.js","components/Header.js","components/SearchButton.js","components/Bookshelves/Bookshelves.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Book","book","changeShelf","addToBooks","thumbnail","imageLinks","className","style","width","height","backgroundImage","onChange","shelf","target","value","updatedBook","console","log","disabled","title","authors","SearchPage","useState","searchedBooks","setSearchedBooks","searchQuery","setSearchQuery","searchBook","query","fetch","method","body","JSON","stringify","then","res","json","data","books","BooksAPI","noneShelf","map","catch","error","onBookSearch","to","type","placeholder","length","key","id","Bookshelf","status","Header","SearchButton","Bookshelves","currentlyReading","filter","wantToRead","read","BooksApp","setBooks","useEffect","changedBook","concat","exact","path","render","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c1d9964e.chunk.js","sourcesContent":["\nconst api = 'https://reactnd-books-api.udacity.com'\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react'\n\nconst Book = ({ book, changeShelf, addToBooks }) => {\n\n  const thumbnail = book.imageLinks ? book.imageLinks.thumbnail : null\n\n  const onChangeShelf = ({ target }) => {\n    const shelf = target.value\n\n    const updatedBook = {\n      ...book,\n      shelf\n    }\n\n    \n    changeShelf(updatedBook, shelf)\n\n    if (addToBooks) {\n      console.log(updatedBook)\n      addToBooks(updatedBook)\n    }\n  }\n\n\n  return (\n    <div className=\"book\">\n      <div className=\"book-top\">\n        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${thumbnail})` }}></div>\n        <div className=\"book-shelf-changer\">\n          <select onChange={onChangeShelf} value={book.shelf}>\n            <option value=\"move\" disabled>Move to...</option>\n            <option value=\"currentlyReading\">Currently Reading</option>\n            <option value=\"wantToRead\">Want to Read</option>\n            <option value=\"read\">Read</option>\n            <option value=\"none\">None</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"book-title\">{ book.title }</div>\n      {book.authors && <div className=\"book-authors\">{ book.authors[0] }</div>}\n    </div>\n  )\n}\n\nexport default Book","import React, { useState } from 'react'\nimport Book from './Book'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from '../BooksAPI'\n\nconst SearchPage = ({ changeShelf, addToBooks }) => {\n  const [ searchedBooks, setSearchedBooks ] = useState([])\n  const [ searchQuery, setSearchQuery ] = useState('') \n\n  const searchBook = (query) => {\n    console.log('searchBook query: ', query)\n    BooksAPI\n      .search(query)\n      .then((books) => {\n        const noneShelf = books.map((book) => {\n          return {\n            ...book,\n            shelf: 'none'\n          }\n        })\n        setSearchedBooks(noneShelf)\n      })\n      .catch(error => {\n        console.log('ERROR', error)\n        setSearchedBooks([])\n      })\n  }\n\n  const handleChange = (query) => {\n    setSearchQuery(query)\n    onBookSearch(query)\n  }\n\n  const onBookSearch = (searchQuery) => {\n    ((searchQuery) || (searchQuery !== '')) ? searchBook(searchQuery) : setSearchedBooks([])\n  }\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link to='/' className=\"close-search\">\n          Close\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input type=\"text\" placeholder=\"Search by title or author\" value={searchQuery} onChange={({target}) => handleChange(target.value)}/>\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">  \n        {\n          (searchedBooks && searchedBooks.length > 0) ?\n          searchedBooks.map((book) => (\n            <li key={book.id}>\n              <Book changeShelf={changeShelf} book={book} addToBooks={addToBooks} />\n            </li>\n          ))\n          : (<h3>Your search has returend no results</h3>)\n        }  \n        </ol>\n      </div>\n    </div>\n  )\n}\n\nexport default SearchPage","import React from 'react'\nimport Book from '../../Book'\n\nconst Bookshelf = ({ books, status, changeShelf }) => {  \n  return (\n    <div>\n      {books.length > 0 && ( \n      <div className=\"bookshelf\">\n        <h2 className=\"bookshelf-title\">{status}</h2>\n        <div className=\"bookshelf-books\">\n          <ol className=\"books-grid\">\n\n            {\n              books.map((book) => (\n                <li key={book.id}>\n                  <Book changeShelf={changeShelf} book={book}/>\n                </li>\n              ))\n            }\n\n          </ol>\n        </div>\n      </div>)}\n    </div>\n  )\n}\n\nexport default Bookshelf","import React from 'react'\n\nconst Header = () => (\n  <div className=\"list-books-title\">\n    <h1>My Reads by Joshua</h1>\n  </div>\n)\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst SearchButton = () => {\n  return (\n    <div className=\"open-search\">\n    <Link \n      to='/search'\n      className='open-search'\n    >\n      Open Search\n    </Link>\n  </div>\n  )\n}\n\nexport default SearchButton","import React from 'react'\nimport Bookshelf from './Bookshelf/Bookshelf'\nimport Header from '../Header'\nimport SearchButton from '../SearchButton'\n\nconst Bookshelves = ({ books, changeShelf }) => {\n\n  const currentlyReading = books.filter(book => book.shelf === 'currentlyReading' )\n  const wantToRead = books.filter(book => book.shelf === 'wantToRead' )\n  const read = books.filter(book => book.shelf === 'read' )\n\n  return (\n    <div>\n    <Header />\n      <div className=\"list-books\">\n        <div className=\"list-books-content\">\n          <div>\n            <Bookshelf changeShelf={changeShelf} books={currentlyReading} status='Currently Reading' />\n            <Bookshelf changeShelf={changeShelf} books={wantToRead} status='Want to Read'/>\n            <Bookshelf changeShelf={changeShelf} books={read} status='Read' />\n          </div>\n        </div>\n      </div>\n      <SearchButton />\n    </div>\n  )\n}\n\nexport default Bookshelves","import React, { useState, useEffect } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport { Route } from 'react-router-dom'\nimport SearchPage from './components/SearchPage'\nimport './App.css'\nimport Bookshelves from './components/Bookshelves/Bookshelves'\n\nconst BooksApp = () => {\n  const [ books, setBooks ] = useState([])\n\n  useEffect(() => {\n    BooksAPI\n      .getAll()\n      .then(books => {\n        setBooks(books)\n      })\n  }, [])\n\n  const changeShelf = (changedBook, shelf) => {\n    BooksAPI.update(changedBook, shelf)\n    setBooks(books.map(book => (book.id === changedBook.id) ? changedBook : book))\n  }\n\n  const addToBooks = (book) => {\n    setBooks(books.concat(book))\n  }\n\n  return (\n    <div className=\"app\">\n      <Route exact path='/' render={() => (\n        <Bookshelves books={books} changeShelf={changeShelf} />\n      )}/>\n      <Route path='/search' render={() => (\n        <SearchPage books={books} changeShelf={changeShelf} addToBooks={addToBooks} />\n      )}/>\n    </div>\n  )\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}